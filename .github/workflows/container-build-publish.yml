name: Container Build and Publish

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Dockerfile path'
        required: false
        default: Dockerfile
        type: string
      context:
        description: 'Build context'
        required: false
        default: .
        type: string
      platforms:
        description: 'Target platforms'
        required: false
        default: linux/amd64,linux/arm64
        type: string
      registry:
        description: 'Container registry'
        required: false
        default: ghcr.io
        type: string
      image_name:
        description: 'Image name'
        required: false
        default: ${{ github.repository }}
        type: string
      min_versions_to_keep:
        description: 'Minimum versions to keep for package deletion'
        required: false
        default: 5
        type: number
    secrets:
      GITHUB_TOKEN:
        required: true  

jobs:
  container-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - uses: actions/delete-package-versions@v5
        if: ${{ github.event_name != 'pull_request' }}
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: ${{ inputs.min_versions_to_keep }}
          delete-only-untagged-versions: true
